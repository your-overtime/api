// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/activity": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get a activities by start and end",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pkg.Activity"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Creates a activity",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pkg.Activity"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Stops a activity",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pkg.Activity"
                        }
                    }
                }
            }
        },
        "/activity/:desc": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Starts a activity",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pkg.Activity"
                        }
                    }
                }
            }
        },
        "/activity/:id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a activity",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pkg.Activity"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "summary": "Updates a activity",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pkg.Activity"
                        }
                    }
                }
            }
        },
        "/overview": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieves overview of your overtime",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pkg.Overview"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "pkg.Activity": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "end": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "start": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "pkg.Overview": {
            "type": "object",
            "properties": {
                "activeActivity": {
                    "$ref": "#/definitions/pkg.Activity"
                },
                "activeTimeThisDayInMinutes": {
                    "type": "integer"
                },
                "activeTimeThisMonthInMinutes": {
                    "type": "integer"
                },
                "activeTimeThisWeekInMinutes": {
                    "type": "integer"
                },
                "activeTimeThisYearInMinutes": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "holidaysStillAvailable": {
                    "type": "integer"
                },
                "overtimeThisDayInMinutes": {
                    "type": "integer"
                },
                "overtimeThisMonthInMinutes": {
                    "type": "integer"
                },
                "overtimeThisWeekInMinutes": {
                    "type": "integer"
                },
                "overtimeThisYearInMinutes": {
                    "type": "integer"
                },
                "usedHolidays": {
                    "type": "integer"
                },
                "weekNumber": {
                    "type": "integer"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
